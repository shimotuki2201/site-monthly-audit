name: Monthly Web QA

on:
  workflow_dispatch:

jobs:
  audit:
    name: Run monthly web audit
    runs-on: ubuntu-latest

    steps:
      # コードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v4

      # Node.js のセットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # 監査ツールのインストール
      - name: Install audit tools
        run: |
          npm install -g pa11y-ci html-validate @lhci/cli

      # レポートフォルダを作成
      - name: Prepare reports folder
        run: mkdir -p reports

      # URLリストを作成
      - name: Build URL list
        run: |
          if [ -f urls.txt ]; then
            cp urls.txt reports/urls.txt
          else
            echo "https://example.com/" > reports/urls.txt
          fi
          echo "✅ URL list ready:"
          cat reports/urls.txt

      # アクセシビリティ監査 (pa11y)
      - name: Run Pa11y (Accessibility)
        run: |
          pa11y-ci --sitemap reports/urls.txt --sitemap-find " " --sitemap-replace " " > reports/pa11y.log || true

      # HTML構文チェック
      - name: Run HTML Validate
        run: |
          while read -r url; do
            echo "Checking $url ..."
            html-validate "$url" >> reports/htmlvalidate.log || true
          done < reports/urls.txt

      # Lighthouse CI（パフォーマンス・SEOなど）
      - name: Run Lighthouse CI
        run: |
          mkdir -p reports/lighthouse
          while read -r url; do
            echo "Running Lighthouse for $url ..."
            lhci collect --url="$url" --output-path="reports/lighthouse" || true
          done < reports/urls.txt

      # ===== ここから GPTによる要約 =====
      - name: Summarize audit logs with GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq

          # ログをトリミング（重すぎ防止）
          head -n 4000 reports/pa11y.log > pa11y.trim.log || true
          head -n 4000 reports/htmlvalidate.log > htmlvalidate.trim.log || true

          PA11Y=$(jq -Rs . < pa11y.trim.log)
          HTMLV=$(jq -Rs . < htmlvalidate.trim.log)

          jq -n --arg pa11y "$PA11Y" --arg html "$HTMLV" '{
            "model": "gpt-4o-mini",
            "messages": [
              {"role":"system","content":"You are a professional web quality auditor. Output concise Japanese Markdown."},
              {"role":"user","content":
"次の2つのログを要約して、Markdownで出力してください。\n\
- 1) pa11y.log（アクセシビリティ）\n- 2) htmlvalidate.log（HTML構文）\n\n\
要件：\n\
1) URLごとに主な問題を表形式で一覧化し、重要度(High/Medium/Low)を付与。\n\
2) よく出る共通の改善事項を箇条書きでまとめる。\n\
3) 修正例（HTML/ARIAなど）をコードブロックで示す。\n\
4) 優先度順に改善アクションを提案。\n\n\
[pa11y.log]\n\($pa11y)\n\n[htmlvalidate.log]\n\($html)\n"}
            ],
            "max_tokens": 2000,
            "temperature": 0.2
          }' > payload.json

          curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d @payload.json \
            | jq -r '.choices[0].message.content' > summary.md

          {
            echo "# 月次Web監査AI要約"
            echo ""
            date -u +"実行時刻 (UTC): %Y-%m-%d %H:%M:%S"
            echo ""
            echo "## ログ概要"
            echo "- pa11y.log"
            echo "- htmlvalidate.log"
            echo ""
            echo "## 要約"
            cat summary.md
          } > reports/SUMMARY_REPORT.md
      # ===== ここまで GPT =====

      # 成果物をアップロード
      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monthly-audit-reports
          path: reports/

      - name: Upload GPT summary
        uses: actions/upload-artifact@v4
        with:
          name: gpt-summary
          path: reports/SUMMARY_REPORT.md
