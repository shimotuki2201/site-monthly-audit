name: Monthly Web QA

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 1 * *' # 毎月1日 00:00 UTC（日本時間 朝9時）

jobs:
  audit:
    name: Run monthly web audit
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CLI tools
        run: |
          npm i -g pa11y-ci html-validate lighthouse @lhci/cli
          sudo apt-get update && sudo apt-get install -y jq

      - name: Prepare reports folder
        run: |
          mkdir -p reports/lighthouse

      - name: Build URL list from urls.txt
        run: |
          if [ -f urls.txt ]; then
            head -n 30 urls.txt > urls_final.txt
          else
            echo "urls.txt が見つかりません。最低1本はURLを記入してください。" > urls_final.txt
          fi
          echo "=== URLs to audit ==="
          nl -ba urls_final.txt

      - name: Run Pa11y (Accessibility)
        run: |
          : > reports/pa11y.log
          while read -r u; do
            case "$u" in http* )
              echo "pa11y: $u" | tee -a reports/pa11y.log
              pa11y-ci "$u" >> reports/pa11y.log 2>&1 || true
            esac
          done < urls_final.txt

      - name: Run HTML Validate
        run: |
          : > reports/htmlvalidate.log
          while read -r u; do
            case "$u" in http* )
              echo "html-validate: $u" | tee -a reports/htmlvalidate.log
              curl -fsSL "$u" | html-validate --stdin >> reports/htmlvalidate.log 2>&1 || true
            esac
          done < urls_final.txt

      - name: Run Lighthouse
        run: |
          while read -r u; do
            case "$u" in http* )
              echo "lighthouse: $u"
              lhci collect --url="$u" --numberOfRuns=1 --outputDir=reports/lighthouse || true
            esac
          done < urls_final.txt

      # サイズ安全版: --rawfile でログを直接読み込む
      - name: Summarize logs with GPT (Markdown)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          head -n 2000 reports/pa11y.log > pa11y.trim.log || true
          head -n 2000 reports/htmlvalidate.log > htmlvalidate.trim.log || true
          head -c 120000 pa11y.trim.log > pa11y.trim2.log || true
          head -c 120000 htmlvalidate.trim.log > htmlvalidate.trim2.log || true

          jq -n \
            --rawfile pa11y pa11y.trim2.log \
            --rawfile html  htmlvalidate.trim2.log \
            '{
              "model": "gpt-4o-mini",
              "messages": [
                {"role": "system", "content": "You are a professional web quality auditor. Output concise Japanese Markdown."},
                {"role": "user", "content":
                  ("次の2つのログを要約して、Markdownで出力してください。\\n" +
                   "- 1) pa11y.log（アクセシビリティ）\\n- 2) htmlvalidate.log（HTML構文）\\n\\n" +
                   "要件：\\n" +
                   "1) URLごとに主な問題を表形式で一覧化し、重要度(High/Medium/Low)を付与。\\n" +
                   "2) よく出る共通の改善事項を箇条書きでまとめる。\\n" +
                   "3) 修正例（HTML/ARIAなど）をコードブロックで示す。\\n" +
                   "4) 優先度順に改善アクションを提案。\\n\\n" +
                   "[pa11y.log]\\n" + $pa11y + "\\n\\n[htmlvalidate.log]\\n" + $html + "\\n")
                }
              ],
              "max_tokens": 2000,
              "temperature": 0.2
            }' > payload.json

          curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d @payload.json \
            | jq -r '.choices[0].message.content' > summary.md

          {
            echo "# 月次Web監査 AI要約"
            echo ""
            date -u +"実行時刻 (UTC): %Y-%m-%d %H:%M:%S"
            echo ""
            echo "## 解析対象ログ"
            echo "- reports/pa11y.log（先頭・約120KBを要約）"
            echo "- reports/htmlvalidate.log（先頭・約120KBを要約）"
            echo ""
            echo "## 要約"
            cat summary.md || echo "_要約が取得できませんでした_"
          } > reports/SUMMARY_REPORT.md

      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monthly-audit-reports
          path: |
            reports/
            urls_final.txt

      - name: Upload GPT summary
        uses: actions/upload-artifact@v4
        with:
          name: gpt-summary
          path: reports/SUMMARY_REPORT.md
