name: Monthly Web QA

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 0 1 * *' # 毎月1日 00:00 UTC（日本時間 朝9時）

jobs:
  audit:
    name: Run monthly web audit (no paid API)
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # 1) リポジトリ取得
      - name: Check out repository
        uses: actions/checkout@v4

      # 2) Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3) 必要ツール（すべて無料CLI）
      - name: Install CLI tools
        run: |
          npm i -g pa11y-ci html-validate lighthouse @lhci/cli

      # 4) レポート出力先
      - name: Prepare reports folder
        run: |
          mkdir -p reports/lighthouse

      # 5) URL リスト（urls.txt を優先、なければ停止しない）
      - name: Build URL list from urls.txt
        run: |
          if [ -f urls.txt ]; then
            # 最大30件に制限（時間超過防止）
            grep -E '^https?://' urls.txt | sed 's/[[:space:]]*$//' | head -n 30 > urls_final.txt
          else
            echo "urls.txt が見つかりません。最低1本はURLを記入してください。" > urls_final.txt
          fi
          echo "=== URLs to audit ==="
          nl -ba urls_final.txt

      # 6) Pa11y（アクセシビリティ）
      - name: Run Pa11y (Accessibility)
        run: |
          : > reports/pa11y.log
          while read -r u; do
            case "$u" in http* )
              echo "pa11y: $u" | tee -a reports/pa11y.log
              pa11y-ci "$u" >> reports/pa11y.log 2>&1 || true
            esac
          done < urls_final.txt

      # 7) HTML Validate（構文）
      - name: Run HTML Validate
        run: |
          : > reports/htmlvalidate.log
          while read -r u; do
            case "$u" in http* )
              echo "html-validate: $u" | tee -a reports/htmlvalidate.log
              curl -fsSL "$u" | html-validate --stdin >> reports/htmlvalidate.log 2>&1 || true
            esac
          done < urls_final.txt

      # 8) Lighthouse（パフォーマンス/SEO 等）
      - name: Run Lighthouse
        run: |
          while read -r u; do
            case "$u" in http* )
              echo "lighthouse: $u"
              lhci collect --url="$u" --numberOfRuns=1 --outputDir=reports/lighthouse || true
            esac
          done < urls_final.txt

      # 9) 料金ゼロのローカル要約（シェルだけでMarkdown集計を作る）
      - name: Build local Markdown summary (no external API)
        run: |
          set -e

          # --- pa11y 集計（URLごとの Error/Warning カウント） ---
          awk '
            /^pa11y: /{
              if (url!="") {print url","errs","warns}
              url=$2; errs=0; warns=0; next
            }
            /^Error:/ {errs++}
            /^Warning:/ {warns++}
            END{ if (url!="") print url","errs","warns }
          ' reports/pa11y.log > reports/pa11y_summary.csv || true

          # --- html-validate 集計（URLごとの error カウント） ---
          awk '
            /^html-validate: /{
              if (url!="") {print url","errs}
              url=$2; errs=0; next
            }
            /^error:/ {errs++}
            END{ if (url!="") print url","errs }
          ' reports/htmlvalidate.log > reports/htmlvalidate_summary.csv || true

          # --- 代表的なエラー Top10（重複集計） ---
          grep -E '^Error:' reports/pa11y.log 2>/dev/null | sed 's/^Error: //' | sort | uniq -c | sort -nr | head -n 10 > reports/pa11y_top.txt || true
          grep -E '^error:' reports/htmlvalidate.log 2>/dev/null | sed 's/^error: //' | sort | uniq -c | sort -nr | head -n 10 > reports/htmlvalidate_top.txt || true

          # --- Markdown 生成 ---
          {
            echo "# 月次Web監査 レポート（ローカル要約・無料版）"
            echo
            date -u +"実行時刻 (UTC): %Y-%m-%d %H:%M:%S"
            echo
            echo "## 対象URL一覧（最大30件）"
            echo
            echo '```'
            cat urls_final.txt
            echo '```'
            echo

            echo "## アクセシビリティ集計（Pa11y）"
            if [ -s reports/pa11y_summary.csv ]; then
              echo
              echo "| URL | Errors | Warnings |"
              echo "|-----|:------:|:--------:|"
              awk -F, '{printf("| %s | %s | %s |\n",$1,$2,$3)}' reports/pa11y_summary.csv
            else
              echo
              echo "_データなし（pa11y.log が空の可能性）_"
            fi
            echo

            echo "## HTML構文集計（html-validate）"
            if [ -s reports/htmlvalidate_summary.csv ]; then
              echo
              echo "| URL | Errors |"
              echo "|-----|:------:|"
              awk -F, '{printf("| %s | %s |\n",$1,$2)}' reports/htmlvalidate_summary.csv
            else
              echo
              echo "_データなし（htmlvalidate.log が空の可能性）_"
            fi
            echo

            echo "## 代表的な問題（頻出Top10）"
            echo
            echo "### Pa11y（アクセシビリティ）"
            if [ -s reports/pa11y_top.txt ]; then
              echo '```'
              cat reports/pa11y_top.txt
              echo '```'
            else
              echo "_なし_"
            fi
            echo
            echo "### html-validate（HTML構文）"
            if [ -s reports/htmlvalidate_top.txt ]; then
              echo '```'
              cat reports/htmlvalidate_top.txt
              echo '```'
            else
              echo "_なし_"
            fi
            echo

            echo "## すぐ直せるチェックリスト（例）"
            echo "- 画像の \`alt\` 追加（例：\`<img src=\"\" alt=\"説明文\">\`）"
            echo "- フォームの \`label for\` と \`id\` の対応付け"
            echo "- 見出しレベルの順序（\`h1 > h2 > h3\`）"
            echo "- HTMLの \`lang=\"ja\"\` 指定"
            echo "- 同一IDの重複、閉じタグ漏れの解消"
            echo
          } > reports/SUMMARY_REPORT.md

      # 10) 成果物アップロード
      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monthly-audit-reports
          path: |
            reports/
            urls_final.txt
